name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-2019]
        sourcemod-version: [master]
        include:
          - os: ubuntu-latest
            target-archs: x86
            
          - os: windows-2019
            target-archs: x86

    steps:
      - name: Install Linux packages
        if: runner.os == 'Linux'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt update
          sudo apt install -yq --no-install-recommends g++-multilib gcc-multilib

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: extension
          submodules: recursive

      - name: Checkout SourceMod
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/sourcemod
          ref: ${{ matrix.sourcemod-version }}
          path: sourcemod
          submodules: recursive
      
      - name: Checkout AMBuild
        uses: actions/checkout@v2
        with:
          repository: alliedmodders/ambuild
          path: ambuild
      
      - name: Install AMBuild
        uses: BSFishy/pip-action@v1
        with:
          packages: ./ambuild

      - name: Build hiredis
        working-directory: extension/hiredis
        shell: bash
        run: |
          mkdir build && cd build
          cmake -m32 ../
        
      - name: Build
        working-directory: extension
        shell: bash
        run: |
          mkdir build && cd build
          python ../configure.py --enable-optimize --targets=${{ matrix.target-archs }}
          ambuild

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}
          path: extension/build/package